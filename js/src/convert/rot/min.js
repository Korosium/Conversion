"use strict";const rot=(()=>{const ASCII_NUMBER={start:48,end:57};const ASCII_UPPERCASE={start:65,end:90};const ASCII_LOWERCASE={start:97,end:122};const ASCII_PRINTABLE={start:33,end:126};const get_numbers=()=>{let retval=[];for(let i=ASCII_NUMBER.start;i<=ASCII_NUMBER.end;i++){retval.push(String.fromCharCode(i));}return retval;};const get_letters=()=>{let retval=[];for(let i=ASCII_LOWERCASE.start;i<=ASCII_LOWERCASE.end;i++){retval.push(String.fromCharCode(i));}return retval;};const get_ascii_printable=()=>{let retval=[];for(let i=ASCII_PRINTABLE.start;i<=ASCII_PRINTABLE.end;i++){retval.push(String.fromCharCode(i));}return retval;};const is_uppercase=c=>c.charCodeAt()>=ASCII_UPPERCASE.start&&c.charCodeAt()<=ASCII_UPPERCASE.end;const process=(s,numbers_offset,letters_offset)=>{const numbers=get_numbers();const letters=get_letters();let arr=s.split('');let retval='';for(let i=0;i<arr.length;i++){const c=arr[i];if(numbers.indexOf(c)!==-1&&numbers_offset!==0){retval+=numbers[(numbers.indexOf(c)+numbers_offset)%numbers.length];}else if(letters.indexOf(c.toLowerCase())!==-1&&letters_offset!==0){const found=letters[(letters.indexOf(c.toLowerCase())+letters_offset)%letters.length];retval+=is_uppercase(c)?found.toUpperCase():found;}else{retval+=c;}}return retval;};const process_47=s=>{const printable=get_ascii_printable();let arr=s.split('');let retval='';for(let i=0;i<arr.length;i++){const c=arr[i];if(printable.indexOf(c)!==-1){retval+=printable[(printable.indexOf(c)+47)%printable.length];}else{retval+=c;}}return retval;};return{rot5(s){return process(s,5,0);},rot13(s){return process(s,0,13);},rot18(s){return process(s,5,13);},rot47(s){return process_47(s);}}})();